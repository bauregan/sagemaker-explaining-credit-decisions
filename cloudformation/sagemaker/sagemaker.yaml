AWSTemplateFormatVersion: '2010-09-09'
Description: Stack for Amazon SageMaker resources.
Parameters:
  StackName:
    Description: |
      Used as a prefix to name all stack resources.
      Should be root stack's name if this is a nested stack.
    Type: String
  StackVersion:
    Description: CloudFormation Stack version.
    Type: String
    AllowedValues: 
      - release
      - development
  S3BucketName:
    Description: Amazon S3 Bucket used to store datasets and schemas.
    Type: String
  GlueDatabase:
    Description: AWS Glue Database name used as a catalogue for dataset tables.
    Type: String
  GlueWorkflow:
    Description: AWS Glue Workflow name used to perform dataset crawl and Glue Job for ETL.
    Type: String
  SolutionsS3BucketName:
    Description: Amazon S3 Bucket containing solutions.
    Type: String
  SageMakerNotebookInstanceType:
    Description: Amazon SageMaker Notebook instance type.
    Type: String
Conditions: 
  StackDevelopment: !Equals [!Ref StackVersion, development]
Resources:
  SageMakerIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - sagemaker.amazonaws.com
              - !If [StackDevelopment, 'ec2.amazonaws.com', 'sagemaker.amazonaws.com']
            Action:
            - 'sts:AssumeRole'
  SageMakerIAMPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub ${StackName}-sagemaker-policy
      Roles:
        - !Ref SageMakerIAMRole
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sagemaker:ListTrainingJobs
              - sagemaker:ListModels
            Resource:
              - '*'
          - Effect: Allow
            Action:
              - sagemaker:CreateTransformJob
              - sagemaker:DescribeTransformJob
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:transform-job/*"
          - Effect: Allow
            Action:
              - sagemaker:CreateTrainingJob
              - sagemaker:DescribeTrainingJob
              - sagemaker:ListTags
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:training-job/*"
          - Effect: Allow
            Action:
              - sagemaker:CreateModel
              - sagemaker:DeleteModel
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:model/*"
          - Effect: Allow
            Action:
              - sagemaker:DescribeEndpointConfig
              - sagemaker:CreateEndpointConfig
              - sagemaker:DeleteEndpointConfig
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint-config/*"
          - Effect: Allow
            Action:
              - sagemaker:CreateEndpoint
              - sagemaker:DescribeEndpoint
              - sagemaker:DeleteEndpoint
              - sagemaker:InvokeEndpoint
              - sagemaker:UpdateEndpoint
            Resource:
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint/*"
              - !Sub "arn:aws:sagemaker:${AWS::Region}:${AWS::AccountId}:endpoint-config/*"
          # Can add CloudWatch Metrics
          - Effect: Allow
            Action:
              - cloudwatch:PutMetricData
              - cloudwatch:GetMetricData
              - cloudwatch:GetMetricStatistics
              - cloudwatch:ListMetrics
            Resource:
              - "*"
          # Can add Amazon CloudWatch Logs
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
            Resource:
              - "*"
          # Can add Amazon CloudWatch Logs
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DescribeLogStreams
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*"
          # Can add Amazon CloudWatch Logs
          - Effect: Allow
            Action:
              - logs:GetLogEvents
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/sagemaker/*:log-stream:*"
          # Can pass the IAM Role to Amazon SageMaker Jobs
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource:
              - !GetAtt SageMakerIAMRole.Arn
            Condition:
              StringEquals:
                iam:PassedToService: sagemaker.amazonaws.com
          # Can get the IAM Role
          - Effect: Allow
            Action:
              - iam:GetRole
            Resource:
              - !GetAtt SageMakerIAMRole.Arn
          # Can list the contents of the SageMaker Solutions Amazon S3 Bucket
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${SolutionsS3BucketName}"
          # Can get objects from the SageMaker Solutions Amazon S3 Bucket
          - Effect: Allow
            Action:
              - s3:GetObject
            Resource:
              - !Sub "arn:aws:s3:::${SolutionsS3BucketName}/*"
          # Can list the contents of the Explaining Credit Decisions Amazon S3 Bucket
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}"
          # Can get objects from the Explaining Credit Decisions Amazon S3 Bucket
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:DeleteObject
              - s3:AbortMultipartUpload
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}/*"
          # Can upload a custom image to the Explaining Credit Decisions Amazon ECR Repository
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - ecr:CompleteLayerUpload
              - ecr:UploadLayerPart
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:DescribeImages
              - ecr:BatchDeleteImage
            Resource:
              - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ECRRepository}"
              - !Sub "arn:aws:ecr:${AWS::Region}:*:repository/sagemaker-scikit-learn"
          # Can start and get status of AWS Glue Workflows.
          - Effect: Allow
            Action:
              - glue:StartWorkflowRun
              - glue:GetWorkflowRun
            Resource:
              - "*"
          # Can get get tables from the AWS Glue Database.
          - Effect: Allow
            Action:
              - glue:GetTable
              - glue:GetTables
            Resource:
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:catalog"
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:database/${GlueDatabase}"
              - !Sub "arn:aws:glue:${AWS::Region}:${AWS::AccountId}:table/*"
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W12
            reason: |
              A number of actions are resource agnostic, so '*' is used.
              See 'logs:CreateLogGroup' as an example.
          - id: W76
            reason: |
              Simpler to keep as single policy for SageMaker resources
  SageMakerNotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties:
      DirectInternetAccess: Enabled
      InstanceType: !Ref SageMakerNotebookInstanceType
      LifecycleConfigName: !GetAtt SageMakerNotebookInstanceLifecycleConfig.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: !Sub ${StackName}-notebook
      RoleArn: !GetAtt SageMakerIAMRole.Arn
      VolumeSizeInGB: 120
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W1201
            reason: Solution does not have AWS KMS encryption enabled by default.
  SageMakerNotebookInstanceLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties:
      NotebookInstanceLifecycleConfigName: !Sub ${StackName}-lifecycle-config
      OnStart:
        - Content:
            Fn::Base64: |
              set -e
              # install amazon-ecr-credential-helper
              sudo wget -P /usr/bin https://amazon-ecr-credential-helper-releases.s3.us-east-2.amazonaws.com/0.4.0/linux-amd64/docker-credential-ecr-login
              sudo chmod +x /usr/bin/docker-credential-ecr-login
              # perform following actions as ec2-user
              sudo -u ec2-user -i <<EOF
              # install Python dependencies in the python3 conda environment
              source /home/ec2-user/anaconda3/bin/activate python3
              pip install --upgrade pip==20.0.2
              # fix to upgrade `docutils` that was installed with `distutils` (hence pip can't uninstall)
              rm -rf /home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/docutils
              rm -f /home/ec2-user/anaconda3/envs/python3/lib/python3.6/site-packages/docutils-*
              pip install --upgrade entrypoints --ignore-installed
              pip install --upgrade ptyprocess --ignore-installed
              pip install --upgrade terminado --ignore-installed
              cd /home/ec2-user/SageMaker
              pip install -r ./containers/dashboard/requirements.txt
              pip install -r ./containers/model/requirements.txt
              pip install -r ./package/requirements.txt
              pip install -e ./package/
              EOF
              # update jupyter-server-proxy
              source /home/ec2-user/anaconda3/bin/activate JupyterSystemEnv
              pip install --upgrade pip==20.0.2
              pip uninstall nbserverproxy || true
              pip install --upgrade jupyter-server-proxy==1.3.2 
              initctl restart jupyter-server --no-wait
      OnCreate:
        - Content:
            Fn::Base64: !Sub |
              set -e
              # perform following actions as ec2-user
              sudo -u ec2-user -i <<EOF
              cd /home/ec2-user/SageMaker
              # copy source files
              aws s3 cp s3://${SolutionsS3BucketName}/Explaining-credit-decisions/sagemaker/ . --recursive
              # set environment variables via .env file
              touch .env
              echo "AWS_ACCOUNT_ID=${AWS::AccountId}" >> .env
              echo "AWS_REGION=${AWS::Region}" >> .env
              echo "EXPLAIN_STACK_NAME=${StackName}" >> .env
              echo "EXPLAIN_S3_BUCKET=${S3BucketName}" >> .env
              echo "EXPLAIN_SAGEMAKER_IAM_ROLE=${SageMakerIAMRole.Arn}" >> .env
              echo "EXPLAIN_GLUE_DATABASE=${GlueDatabase}" >> .env
              echo "EXPLAIN_GLUE_WORKFLOW=${GlueWorkflow}" >> .env
              echo "EXPLAIN_ECR_REPOSITORY=${ECRRepository}" >> .env
              EOF
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${StackName}
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W28
            reason: Custom name is more descriptive.
Outputs:
  SageMakerNotebookInstanceSignOn:
    Description: Amazon SageMaker Notebook Instance URL to orchestrate AWS Glue and Amazon SageMaker Jobs.
    Value: !Sub "https://console.aws.amazon.com/sagemaker/home?region=${AWS::Region}#/notebook-instances/openNotebook/${SageMakerNotebookInstance.NotebookInstanceName}?view=classic"
  SageMakerNotebookInstanceNotebooks:
    Description: URL to notebooks on the Amazon SageMaker Notebook Instance.
    Value: !Sub "https://${SageMakerNotebookInstance.NotebookInstanceName}.notebook.${AWS::Region}.sagemaker.aws/tree/notebooks"
  ECRRepository:
    Description: Amazon ECR Repository
    Value: !Ref ECRRepository